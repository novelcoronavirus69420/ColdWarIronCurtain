oil_calc = {
	set_variable = { oilAmmount = resource@oil }
	set_variable = { oilAmmountNeg = oilAmmount }
	multiply_variable = { oilAmmountNeg = -1 }
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?oilAmmountNeg]"
	}	
}

oil_calc3 = {
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?oilAmmountback]"
	}	
	set_variable = { oilAmmountback = 0 }
}
oil_add = {
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?oilAmmount]"
	}	
	set_variable = { oilAmmount = 0 }
}


oil_consumption_set = {	#Fire in Decision Pulse
	
	hidden_effect = {
		every_owned_state = {
			resource_modifier_set_startup = yes
			oil_calc = yes

			set_variable = { oilCheck = oilAmmount }

			subtract_from_variable = { oilAmmount = baseOil }
			add_to_variable = { oilAmmount = oilAmmountback } 
			set_variable = { baseOil = oilAmmount }	

			if = {
				limit = {
					check_variable = { oilCheck > 0 }
				}
				multiply_variable = { oilAmmount = resourceEfficiencyInfra }
				multiply_variable = { oilAmmount = oilEfficiencyGain }
			}			
			
			round_variable = oilAmmount
			subtract_from_variable = { baseOil = oilAmmount }
			multiply_variable = { baseOil = -1 }

			#Same
			set_variable = { oilBaseEffCheck = oilAmmount }	
			set_variable = { fossil_fuel_plant_quantity = building_level@fossil_fuel_powerplant }	
			
			set_variable = { industrial_complex_quantity = building_level@industrial_complex }			
			set_variable = { industrial_complex_quantity_adjustment = 1 }

			set_variable = { office_park_quantity = building_level@office_park }			
			set_variable = { office_park_quantity_adjustment = 1 }			
			
			if = {
				limit = {
					controller = {
						has_tech = plastics_V
					}
				}
				add_to_variable = { industrial_complex_quantity_adjustment = -0.1 } 
				add_to_variable = { office_park_quantity_adjustment = -0.1 } 
			}	
			
			if = {
				limit = {
					controller = {
						has_tech = electriccars
					}
				}
				add_to_variable = { industrial_complex_quantity_adjustment = -0.35 } 
				add_to_variable = { office_park_quantity_adjustment = -0.35 } 
			}			
			
			multiply_variable = { industrial_complex_quantity_adjustment = industrial_complex_quantity }
			
			multiply_variable = { office_park_quantity_adjustment = office_park_quantity }
			
			add_to_variable = { industrial_complex_quantity_adjustment = office_park_quantity_adjustment }
			
			set_variable = { oilAdjustment = industrial_complex_quantity_adjustment } 

			add_to_variable = { oilAdjustment = fossil_fuel_plant_quantity } 
			round_variable = oilAdjustment
			
			subtract_from_variable = { oilAmmount = oilAdjustment }
			round_variable = oilAmmount
			
			set_variable = { oilAmmountback = oilAdjustment }	#When more maluses added we will change this to a combination of all maluses under oilConsumptionReversion

			oil_add = yes
		}
	}
}

oil_consumption_original = {	#Fire on Startup
	
	hidden_effect = {
		
		every_owned_state = {
			resource_modifier_set_startup = yes
			oil_calc = yes				
			set_variable = { baseOil = oilAmmount }	
			multiply_variable = { oilAmmount = resourceEfficiencyInfra }
			round_variable = oilAmmount
			subtract_from_variable = { baseOil = oilAmmount }
			multiply_variable = { baseOil = -1 }
			
			set_variable = { oilBaseEffCheck = oilAmmount }	
			
			set_variable = { fossil_fuel_plant_quantity = building_level@fossil_fuel_powerplant }	
			
			set_variable = { industrial_complex_quantity = building_level@industrial_complex }			
			set_variable = { industrial_complex_quantity_adjustment = 1 }
			
			set_variable = { office_park_quantity = building_level@office_park }			
			set_variable = { office_park_quantity_adjustment = 1 }			
			
			if = {
				limit = {
					controller = {
						has_tech = plastics_V
					}
				}
				add_to_variable = { industrial_complex_quantity_adjustment = -0.1 } 
				add_to_variable = { office_park_quantity_adjustment = -0.1 } 
			}	
			
			if = {
				limit = {
					controller = {
						has_tech = electriccars
					}
				}
				add_to_variable = { industrial_complex_quantity_adjustment = -0.35 } 
				add_to_variable = { office_park_quantity_adjustment = -0.35 } 
			}					
			
			multiply_variable = { industrial_complex_quantity_adjustment = industrial_complex_quantity }
			
			multiply_variable = { office_park_quantity_adjustment = office_park_quantity }
			
			add_to_variable = { industrial_complex_quantity_adjustment = office_park_quantity_adjustment }
			
			set_variable = { oilAdjustment = industrial_complex_quantity_adjustment } 

			add_to_variable = { oilAdjustment = fossil_fuel_plant_quantity } 
			round_variable = oilAdjustment
			
			subtract_from_variable = { oilAmmount = oilAdjustment }
			round_variable = oilAmmount
			
			set_variable = { oilAmmountback = oilAdjustment }	#When more maluses added we will change this to a combination of all maluses under oilConsumptionReversion

			oil_add = yes
		}
	}
}
industrial_pulse = {	

	multiply_variable = { oil_consumption = -1 }  
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?oil_consumption]"
	}	


	multiply_variable = { electric_consumption = -1 }  
	meta_effect = {
		text = {
			add_resource = {
				type = electricity
				amount = [AMNT]
			}
		}
		AMNT = "[?electric_consumption]"
	}	

	multiply_variable = { steel_consumption = -1 }  
	meta_effect = {
		text = {
			add_resource = {
				type = steel
				amount = [AMNT]
			}
		}
		AMNT = "[?steel_consumption]"
	}	
	
	set_variable = { oil_consumption = 0 }
	set_variable = { steel_consumption = 0 }
	set_variable = { electric_consumption = 0 }
	
	add_to_variable = { oil_consumption = -1 } #Oil
	add_to_variable = { steel_consumption = -1 } #Steel
	add_to_variable = { electric_consumption = -1 } #Electricity
		
	#Tech/National Spirit modifiers to this building
	if = {
		limit = {
			controller = {
				has_tech = management_IX
			}
		}

		add_to_variable = { steel_consumption = 0.1 } 
	}
	if = {
		limit = {
			controller = {
				has_tech = plastics_III
			}
		}
		add_to_variable = { steel_consumption = 0.1 } 
	}	
	if = {
		limit = {
			controller = {
				has_tech = plastics_V
			}
		}
		add_to_variable = { steel_consumption = 0.1 } 
	}	
	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_I
			}
		}
		add_to_variable = { electric_consumption = 0.1 } 
	}
	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_II
			}
		}
		add_to_variable = { electric_consumption = 0.1 } 
	}	
	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_V
			}
		}
		add_to_variable = { electric_consumption = 0.1 } 
	}	
	if = {
		limit = {
			controller = {
				has_tech = electriccars
			}
		}
		add_to_variable = { oil_consumption = 0.35 } 
		add_to_variable = { electric_consumption = -0.25 }  
	}
	
	multiply_variable = { oil_consumption =	building_level@industrial_complex }
	multiply_variable = { electric_consumption = building_level@industrial_complex }
	multiply_variable = { steel_consumption = building_level@industrial_complex }
	
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?oil_consumption]"
	}	
	meta_effect = {
		text = {
			add_resource = {
				type = electricity
				amount = [AMNT]
			}
		}
		AMNT = "[?electric_consumption]"
	}	
	meta_effect = {
		text = {
			add_resource = {
				type = steel
				amount = [AMNT]
			}
		}
		AMNT = "[?steel_consumption]"
	}		
}

dockyard_pulse = {

	multiply_variable = { dockyard_consumption = -1 }  
	meta_effect = {
		text = {
			add_resource = {
				type = oil
				amount = [AMNT]
			}
		}
		AMNT = "[?dockyard_consumption]"
	}	
	
	add_to_variable = { dockyard_consumption = -1 }

	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_III
			}
		}
		add_to_variable = { dockyard_consumption = 0.1 }  
	}		
	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_V
			}
		}
		add_to_variable = { dockyard_consumption = 0.1 }  
	}		
	if = {
		limit = {
			controller = {
				has_tech = ecoenergy_VI
			}
		}
		add_to_variable = { dockyard_consumption = 0.1 }  
	}		
	multiply_variable = { dockyard_consumption = building_level@dockyard }
	
	meta_effect = {
		text = {
			add_resource = {
				type = electricity
				amount = [AMNT]
			}
		}
		AMNT = "[?dockyard_consumption]"
	}	

}